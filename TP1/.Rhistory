#install.packages("tidyverse")
library(tidyverse)
#install.packages("readr")
library(readr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
data <- read_csv("dataset_votantes_trump.csv")
#install.packages("janitor")
library(janitor)
library(dplyr)
#sacar columna ID
data <- data %>%
clean_names()
data %>%
select(estado_de_residencia) %>%  # Selecciona solo esta columna
distinct() %>%                    # unique() en Python
pull()
data <- data %>%
mutate(estado_de_residencia = recode(estado_de_residencia,
"Texaas" = "Texas",
"Flrorida" = "Florida",
"Illionis" = "Illinois",
"Califronia" = "California"
))
data <- data %>%
select(-id)
#data <- data %>%
#  drop_na(frecuencia_de_voto)
summary(data)
#edad min 5  // max 150
# Edades raras  -> los de 5 van a la secundaria y universidad y uno tiene hijos ??!!! gente con 150 años --> La persona más longeva del mundo fue Jeanne Louise Calment, una francesa que vivió 122 años y 164 días.
# ingreso min -5000 // max 1000000
# ingresos negativos
# número de hijos min -1 // max 10
# número de hijos negativo
#sapply(data, function(x) if (is.numeric(x)) c(Min = min(x, na.rm = TRUE), Max = max(x, na.rm = TRUE))) devuelve max y min de las variables numericas
data$numero_de_hijos <- abs(data$numero_de_hijos)
data$ingreso_anual<- abs(data$ingreso_anual)
#se sacan los negativos considerando el valor absoluto asumiendo error de tipeo
# para evaluar por edades vamos a tener cuidado con los datos raros
# los consideraremos solo para generos o niveles educativos alcanzados
data <- data %>% mutate(estado_corregido = as.factor(estado_de_residencia))
summary(data$estado_de_residencia) #caracteres sueltos
summary(data$estado_corregido) # categorias creadas: 6. Son correctas son los estados e igualan a la cantidad de datos que hay (500).
# DataSet
maga_data <- data %>%
filter(preferencia_politica == "Trump",
edad >= 18,
frecuencia_de_voto != "Nunca",
!is.na(genero),
!is.na(edad),
!is.na(nivel_educativo))
#if_else(condición, valor_si_verdadero, valor_si_falso)
maga_data <- maga_data %>%
mutate(educacion_universitaria = if_else(nivel_educativo %in% c("Universitario", "Posgrado", "Doctorado"), "Sí", "No"))
library(tidyverse)
#install.packages("janitor")
library(janitor)
datos= read_csv("C:/Users/luciv/OneDrive/Documentos/LUCIANA/UdeSA/CC4/Diseños/dataset_votantes_trump.csv")
#sacar columna ID porque se repite con el índice
datos <- datos  %>% select(-ID)
clean_names(datos)
datos%>%
select(`Estado de residencia`) %>% #selecciono la columna estado de residencia
distinct() %>%
pull()
datos = datos %>%
mutate(`Estado de residencia` = recode(`Estado de residencia`,
"Texaas" = "Texas",
"Califronia" = "California",
"Illionis" = "Illinois",
"Flrorida" = "Florida"))
datos=datos%>%
drop_na(`Frecuencia de voto`)
summary(datos)
#la edad mínima es de 5 años (los niños no votan) y la edad máxima es 150 años (es casi imposible que alguien viva tanto tiempo)
#hay ingreso anual negativo (-5000) que podría representar un estado de deuda pero no se aclara bien.
#la mayor cantidad de hijos es de 10 y el número mínimo es -1 (es imposible)
datos$hijos_corregido= abs(datos$`Número de hijos`)
datos$ingreso_corregido= abs(datos$`Ingreso anual`)
#La función abs() pasa valores positivos y negativos a valores absolutos. Si el número es positivo queda igual y si es negativo se transforma en ese valor positivo.
#chequeo si contiene character
is.character(datos$`Estado de residencia`)
datos= datos %>%
mutate(estado_corregido = as.factor(`Estado de residencia`))
summary(datos$estado_corregido)
#California tiene 80
#Florida tiene 67
#Illinois tiene 85
#Nueva York tiene 95
#Texas tiene 76
#Hay 47 Nan
#chequeo si contiene character
is.character(datos$`Estado de residencia`)
datos= datos %>%
mutate(estado_corregido = as.factor(`Estado de residencia`))
summary(datos$estado_corregido)
#California tiene 80
#Florida tiene 67
#Illinois tiene 85
#Nueva York tiene 95
#Texas tiene 76
#Hay 47 Nan
# DataSet
maga_data <- data %>%
filter(preferencia_politica == "Trump",
edad >= 18,
frecuencia_de_voto != "Nunca",
!is.na(genero),
!is.na(edad),
!is.na(nivel_educativo))
#if_else(condición, valor_si_verdadero, valor_si_falso)
maga_data <- maga_data %>%
mutate(educacion_universitaria = if_else(nivel_educativo %in% c("Universitario", "Posgrado", "Doctorado"), "Sí", "No"))
library(ggplot2)
ggplot(data %>% filter(!is.na(ingreso_anual) & !is.na(genero)), aes(x = ingreso_anual, fill = genero)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
labs(title = "Histograma de ingresos por género",
x = "Ingreso anual",
y = "Frecuencia") +
theme_minimal()
# En los intervalos con sueldo mas altos hay más hombres que mujeres.
data_ejercicio2 <- data %>%
filter(frecuencia_de_voto != "Nunca", # Los que dicen que no votan
edad != 5,     # Excluir personas con edad = 5
edad != 150,   # Excluir personas con edad = 150
complete.cases(edad, ingreso_anual, genero, preferencia_politica))  #                                                         Excluir NA en género en todo
ggplot(data_ejercicio2, aes(x = ingreso_anual, y = edad, color = genero)) +
geom_point(alpha = 0.7) +  # Puntos de dispersión
facet_wrap(~ preferencia_politica) +  # Crear facetas para Trump y Kamala
labs(title = "Relación entre Ingreso, Edad y Preferencia de Voto",
x = "Ingreso Anual",
y = "Edad",
color = "Género") +
theme_minimal()
ggplot(data_ejercicio2, aes(x = ingreso_anual, y = edad, color = genero)) +
geom_point(alpha = 0.7) +  # Puntos de dispersión
geom_smooth(method = "lm", se = FALSE) +  # Línea de ajuste lineal sin intervalo de confianza
facet_wrap(~ preferencia_politica) +  # Crear facetas para Trump y Kamala
labs(title = "Relación entre Ingreso, Edad y Preferencia de Voto",
x = "Ingreso Anual",
y = "Edad",
color = "Género") +
theme_minimal()
cor_masc <- cor(data_ejercicio2$edad[data_ejercicio2$genero == "Masculino"],
data_ejercicio2$ingreso_anual[data_ejercicio2$genero =="Masculino"])
cor_fem <- cor(data_ejercicio2$edad[data_ejercicio2$genero == "Femenino"],
data_ejercicio2$ingreso_anual[data_ejercicio2$genero == "Femenino"])
cor_otro <- cor(data_ejercicio2$edad[data_ejercicio2$genero == "Otro"],
data_ejercicio2$ingreso_anual[data_ejercicio2$genero == "Otro"])
colores_genero <- c("Femenino" = "#FFC0CB",
"Masculino" = "#77DD77",
"Otro" = "#ADD8E6")
ggplot(data_ejercicio2, aes(x = ingreso_anual, y = edad, color = genero)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
annotate("text", x = max(data_ejercicio2$ingreso_anual, na.rm = TRUE) * 0.9,
y = max(data_ejercicio2$edad, na.rm = TRUE) * 0.95,
label = paste("Corr. Femenino:", round(cor_fem, 2)), color = colores_genero["Femenino"]) +
annotate("text", x = max(data_ejercicio2$ingreso_anual, na.rm = TRUE) * 0.9,
y = max(data_ejercicio2$edad, na.rm = TRUE) * 0.90,
label = paste("Corr. Masculino:", round(cor_masc, 2)), color = colores_genero["Masculino"]) +
annotate("text", x = max(data_ejercicio2$ingreso_anual, na.rm = TRUE) * 0.9,
y = max(data_ejercicio2$edad, na.rm = TRUE) * 0.85,
label = paste("Corr. Otro:", round(cor_otro, 2)), color = colores_genero["Otro"]) +
scale_color_manual(values = colores_genero) +
labs(title = "Relación entre Ingreso Anual y Edad por Género",
x = "Ingreso Anual",
y = "Edad") +
theme_minimal()
maga_data$genero <- as.factor(maga_data$genero)
maga_data$educacion_universitaria <- as.factor(maga_data$educacion_universitaria)
# Correr la regresión lineal
modelo_regresion <- lm(ingreso_anual ~ genero + edad + educacion_universitaria + numero_de_hijos, data = maga_data)
# Ver el resumen del modelo
summary(modelo_regresion)
# Ejercicio 3:
plot(modelo_regresion)
#Q-Q Residuals: sigue distribucion normal --> cumple supuesto de normalidad de errores(sacando outliers). Los puntos siguen aproximadamente la línea diagonal
# Residuals vs Fitted: cumple supuesto de linealidad. No hay patrones sistematicos (ejemplo: U)
# Scale-Location: homocedasticidad (nube de puntos), distribuidos más o menos de manera uniforme (aunque hay una tendencia a bajar cuando los valores de x aumentan)
library(performance)
# Comprobar los supuestos del modelo con check_model
check_model(modelo_regresion) #cumple los supuestos
# Comprobar los supuestos del modelo con check_model
check_model(modelo_regresion) #cumple los supuestos
datos_rlogistica <- data %>%
filter(frecuencia_de_voto != "Nunca", # Los que dicen que no votan
edad != 5,     # Excluir personas con edad = 5
edad != 150,   # Excluir personas con edad = 150
complete.cases(edad, ingreso_anual, genero, preferencia_politica, nivel_educativo))  #Excluir NA en género en todo
datos_rlogistica[, c("genero", "nivel_educativo","preferencia_politica")] <- lapply(datos_rlogistica[, c("genero", "nivel_educativo","preferencia_politica")], as.factor)
datos_rlogistica <- data %>%
filter(frecuencia_de_voto != "Nunca", # Los que dicen que no votan
edad != 5,     # Excluir personas con edad = 5
edad != 150,   # Excluir personas con edad = 150
complete.cases(edad, ingreso_anual, genero, preferencia_politica, nivel_educativo))  #Excluir NA en género en todo
datos_rlogistica[, c("genero", "nivel_educativo","preferencia_politica")] <- lapply(datos_rlogistica[, c("genero", "nivel_educativo","preferencia_politica")], as.factor)
datos_rlogistica <- datos_rlogistica %>%
mutate(preferencia_binaria = ifelse(preferencia_politica == "Trump", 1, 0))
# Ajuste del modelo de regresión logística
modelo_logistico <- glm(preferencia_binaria ~ edad + genero + nivel_educativo + ingreso_anual,
data = datos_rlogistica,
family = binomial)
summary(modelo_logistico)
#test deviance
D = modelo_logistico$null.deviance - modelo_logistico$deviance
p_valor = 1-pchisq(D, 1)
p_valor
odds_ratios <- exp(coef(modelo_logistico))
# Mostrar Odds Ratios
print(odds_ratios)
library(tidyverse)
#install.packages("janitor")
library(janitor)
datos= read_csv("C:/Users/luciv/OneDrive/Documentos/LUCIANA/UdeSA/CC4/Diseños/dataset_votantes_trump.csv")
library(tidyverse)
#install.packages("janitor")
library(janitor)
datos= read_csv("C:/Users/luciv/OneDrive/Documentos/LUCIANA/UdeSA/CC4/Diseños/TPs mi resolución/dataset_votantes_trump.csv")
#sacar columna ID porque se repite con el índice
datos <- datos  %>% select(-ID)
clean_names(datos)
datos%>%
select(`Estado de residencia`) %>% #selecciono la columna estado de residencia
distinct() %>%
pull()
datos = datos %>%
mutate(`Estado de residencia` = recode(`Estado de residencia`,
"Texaas" = "Texas",
"Califronia" = "California",
"Illionis" = "Illinois",
"Flrorida" = "Florida"))
datos=datos%>%
drop_na(`Frecuencia de voto`)
summary(datos)
#la edad mínima es de 5 años (los niños no votan) y la edad máxima es 150 años (es casi imposible que alguien viva tanto tiempo)
#hay ingreso anual negativo (-5000) que podría representar un estado de deuda pero no se aclara bien.
#la mayor cantidad de hijos es de 10 y el número mínimo es -1 (es imposible)
datos$hijos_corregido= abs(datos$`Número de hijos`)
datos$ingreso_corregido= abs(datos$`Ingreso anual`)
#La función abs() pasa valores positivos y negativos a valores absolutos. Si el número es positivo queda igual y si es negativo se transforma en ese valor positivo.
#chequeo si contiene character
is.character(datos$`Estado de residencia`)
datos= datos %>%
mutate(estado_corregido = as.factor(`Estado de residencia`))
summary(datos$estado_corregido)
#California tiene 80
#Florida tiene 67
#Illinois tiene 85
#Nueva York tiene 95
#Texas tiene 76
#Hay 47 Nan
#Los errores fueron corregidos anteriormente
datos <- datos %>%
mutate(`Estado de residencia` = as.factor(`Estado de residencia`))
#borro los Nan del dataset general pero los guardo en una nueva variable llamada maga (nuevo dataset)
maga = datos %>%
drop_na(`Edad`, `Género`, `Nivel educativo`)
#selecciono solo algunas columnas del nuevo dataset
maga = maga %>%
select(`Preferencia política`,`Edad`,`Frecuencia de voto`, `Género`, `Nivel educativo`, `Número de hijos`, `Ingreso anual`)
#filtro los datos según edad, frecuencia de voto y pref. política
maga =  maga %>%
filter(`Edad` > 18 & `Frecuencia de voto` != "Nunca" & `Preferencia política` == "Trump")
#creo una nueva variable que incluya "sí" si la persona tiene educación universitaria o "no" caso contrario
maga <- maga %>%
mutate(educacion_universitaria = ifelse(`Nivel educativo` %in% c("Primaria", "Secundaria"), "No", "Si"))
maga$Género <- as.factor(maga$Género)
maga$educacion_universitaria <- as.factor(maga$educacion_universitaria)
summary(maga)
library(ggplot2)
ggplot(datos %>% filter(!is.na(`Ingreso anual`) & !is.na(`Género`)), aes(x = `Ingreso anual`, fill = `Género`)) +
geom_histogram(position = "identity", alpha = 0.3, bins = 30) +
labs(title = "Histograma de ingresos por género",
x = "Ingreso anual",
y = "Frecuencia") +
scale_fill_manual(values = c("Masculino" = "blue", "Femenino" = "red", "Otro" = "yellow")) +
theme_classic()
datosg= datos %>%
filter(`Frecuencia de voto` != "Nunca",
`Edad` != 5,
`Edad` != 150,
complete.cases(`Edad`, `Ingreso anual`, `Género`, `Preferencia política`))
#complete cases elimina las filas que tienen NAN
ggplot(datosg, aes(x = `Ingreso anual`, y = `Edad`, color = `Género`)) +
geom_point(alpha = 0.7) +  # Puntos de dispersión
facet_wrap(~ `Preferencia política`) +  # Crear facetas para Trump y Kamala
labs(title = "Relación entre Ingreso, Edad y Preferencia de Voto",
x = "Ingreso Anual",
y = "Edad",
color = "Género") +
theme_minimal()
ggplot(datosg, aes(x = `Ingreso anual`, y = `Edad`, color = `Género`)) +
geom_point(alpha = 0.7) +  # Puntos de dispersión
geom_smooth(method = "lm", se = FALSE) +  # Línea de ajuste lineal sin intervalo de confianza
facet_wrap(~ `Preferencia política`) +  # Crear facetas para Trump y Kamala
labs(title = "Relación entre Ingreso, Edad y Preferencia de Voto",
x = "Ingreso Anual",
y = "Edad",
color = "Género") +
theme_minimal()
cor(datosg$`Edad`[datosg$`Género` == "Masculino"],
datosg$`Ingreso anual`[datosg$`Género` == "Masculino"])
cor(datosg$`Edad`[datosg$`Género` == "Femenino"],
datosg$`Ingreso anual`[datosg$`Género` == "Femenino"])
cor(datosg$`Edad`[datosg$`Género` == "Otro"],
datosg$`Ingreso anual`[datosg$`Género` == "Otro"])
regre_ingreso = lm(`Ingreso anual` ~ Género + Edad + educacion_universitaria + `Número de hijos`, data = maga)
summary(regre_ingreso)
r=residuals(regre_ingreso)
qqnorm(r)
#install.packages("performance")
#library(performance)
#grafico un qqplot con la distirbuicón de residuos y chequeo otros supuestos
#check_model(regre_ingreso)
datos_logit =  datos %>%
drop_na(`Edad`, `Género`, `Nivel educativo`)
#filtro los datos según edad y frecuencia de voto
datos_logit =  datos_logit %>%
filter(`Edad` > 18 & `Frecuencia de voto` != "Nunca")
#creo una nueva variable que incluya "sí" si la persona tiene educación universitaria o "no" caso contrario
datos_logit <- datos_logit %>%
mutate(educacion_universitaria = ifelse(`Nivel educativo` %in% c("Primaria", "Secundaria"), "No", "Si"))
datos_logit <- datos_logit %>%
mutate(vota_maga = ifelse(`Preferencia política` == "Trump", 1, 0))
datos_logit$Género <- as.factor(datos_logit$Género)
datos_logit$educacion_universitaria <- as.factor(datos_logit$educacion_universitaria)
trump_logit= glm(vota_maga~ Edad+Género+`Ingreso anual`+educacion_universitaria, data=datos_logit, family=binomial)
summary(trump_logit)
#test deviance
D = trump_logit$null.deviance - trump_logit$deviance
p_valor = 1-pchisq(D, 1)
p_valor
or= exp(coef(trump_logit))
or
