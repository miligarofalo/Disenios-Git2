tidy <- tidy_dagitty(causal)
nodes <- tidy %>%
filter(is.na(from) & is.na(to)) %>%
mutate(destacar_nodo = ifelse(name %in% nodos_camino, "Sí", "No"))
edges <- tidy %>%
filter(!is.na(from) & !is.na(to)) %>%
mutate(destacar_arista = ifelse(
paste0(from, "_", to) %in% paste0(aristas_camino$from, "_", aristas_camino$to),
"Sí", "No"
))
ggplot() +
geom_segment(
data = edges,
aes(x = x, y = y, xend = xend, yend = yend, color = destacar_arista, linewidth = destacar_arista),
lineend = "round"
) +
geom_point(
data = nodes,
aes(x = x, y = y, fill = destacar_nodo), shape = 21, size = 7, color = "black"
) +
geom_text(
data = nodes,
aes(x = x, y = y, label = name), size = 4, color = "black"
) +
scale_fill_manual(values = c("Sí" = "tomato", "No" = "lightgray")) +
scale_color_manual(values = c("Sí" = "tomato", "No" = "gray80")) +
scale_linewidth_manual(values = c("Sí" = 1.5, "No" = 0.5)) +
theme_void() +
theme(legend.position = "none") +
ggtitle(etiqueta_campo)
})
# Mostrar el primer gráfico para prueba
print(plot_list[[1]])
# Mostrar todos los gráficos con pausa
for(i in seq_along(plot_list)) {
print(plot_list[[i]])
readline(prompt = paste0("Gráfico ", i, " de ", length(plot_list), ". Enter para continuar..."))
}
library(dagitty)
library(tidygraph)
library(ggraph)
library(dplyr)
library(purrr)
# Definir el DAG original
causal <- dagitty("dag {
bb=\"0,0,1,1\"
Actividad_Fisica [pos=\"0.581,0.104\"]
Alimentacion [pos=\"0.416,0.576\"]
Consumo_Familiar [pos=\"0.680,0.772\"]
Contencion_familiar [pos=\"0.142,0.073\"]
Intento_de_suicidio [outcome,pos=\"0.791,0.302\"]
Pobreza_extrema [pos=\"0.489,0.858\"]
Violencia_Fisica [pos=\"0.587,0.427\"]
Bullying [pos=\"0.329,0.800\"]
Consumo [pos=\"0.773,0.619\"]
Edad [pos=\"0.282,0.443\"]
IMC [pos=\"0.388,0.121\"]
Sexo [pos=\"0.162,0.576\"]
Soledad [exposure,pos=\"0.146,0.262\"]
Actividad_Fisica -> Intento_de_suicidio
Actividad_Fisica -> IMC
Alimentacion -> IMC
Consumo_Familiar -> Contencion_familiar
Consumo_Familiar -> Violencia_Fisica
Consumo_Familiar -> Consumo
Contencion_familiar -> Intento_de_suicidio
Contencion_familiar -> Soledad
Pobreza_extrema -> Alimentacion
Pobreza_extrema -> Consumo_Familiar
Pobreza_extrema -> Intento_de_suicidio
Pobreza_extrema -> Consumo
Violencia_Fisica -> Intento_de_suicidio
Bullying -> Intento_de_suicidio
Bullying -> Violencia_Fisica
Bullying -> Soledad
Consumo -> Intento_de_suicidio
Consumo -> Violencia_Fisica
Edad -> Intento_de_suicidio
Edad -> Soledad
IMC -> Bullying
Sexo -> Intento_de_suicidio
Sexo -> Soledad
Soledad -> Intento_de_suicidio
Soledad -> Consumo
}")
# Nodo inicio y fin
from <- "Soledad"
to <- "Intento_de_suicidio"
# Obtener todos los caminos dirigidos abiertos entre from y to
paths_list <- paths(causal, from = from, to = to)$paths
# Extraemos posiciones de nodos (como dataframe)
pos_mat <- coordinates(causal)
positions <- tibble(
name = names(pos_mat[,1]),
x = pos_mat[,1],
y = pos_mat[,2]
)
# Extraer posiciones (x,y) de cada nodo
pos_list <- coordinates(causal)
pos_df <- tibble(
name = names(pos_list),
pos = pos_list
) %>%
separate(pos, into = c("x","y"), sep = ",", convert = TRUE)
# Creamos el DAG
causal <- dagitty("dag {
bb=\"0,0,1,1\"
\"Actividad Física\" [pos=\"0.581,0.104\"]
\"Alimentación\" [pos=\"0.416,0.576\"]
\"Consumo Familiar\" [pos=\"0.680,0.772\"]
\"Contención familiar\" [pos=\"0.142,0.073\"]
\"Intento de suicidio\" [outcome,pos=\"0.791,0.302\"]
\"Pobreza extrema\" [pos=\"0.489,0.858\"]
\"Violencia Física\" [pos=\"0.587,0.427\"]
Bullying [pos=\"0.329,0.800\"]
Consumo [pos=\"0.773,0.619\"]
Edad [pos=\"0.282,0.443\"]
IMC [pos=\"0.388,0.121\"]
Sexo [pos=\"0.162,0.576\"]
Soledad [exposure,pos=\"0.146,0.262\"]
\"Actividad Física\" -> \"Intento de suicidio\"
\"Actividad Física\" -> IMC
\"Alimentación\" -> IMC
\"Consumo Familiar\" -> \"Contención familiar\"
\"Consumo Familiar\" -> \"Violencia Física\"
\"Consumo Familiar\" -> Consumo
\"Contención familiar\" -> \"Intento de suicidio\"
\"Contención familiar\" -> Soledad
\"Pobreza extrema\" -> \"Alimentación\"
\"Pobreza extrema\" -> \"Consumo Familiar\"
\"Pobreza extrema\" -> \"Intento de suicidio\"
\"Pobreza extrema\" -> Consumo
\"Violencia Física\" -> \"Intento de suicidio\"
Bullying -> \"Intento de suicidio\"
Bullying -> \"Violencia Física\"
Bullying -> Soledad
Consumo -> \"Intento de suicidio\"
Consumo -> \"Violencia Física\"
Edad -> \"Intento de suicidio\"
Edad -> Soledad
IMC -> Bullying
Sexo -> \"Intento de suicidio\"
Sexo -> Soledad
Soledad -> \"Intento de suicidio\"
Soledad -> Consumo
}")
ggdag(causal) + theme_dag()+
geom_dag_node(color ="pink") +
geom_dag_text(color = "black", size=3.5)+
geom_dag_edges(size = 1.5)
causal %>% ggdag_paths_fan (shadow = TRUE, node_size = 18, text_size = 4, spread = 1.5, label_size = text_size, node= TRUE, text_col = "white")
ggdag(causal) + theme_dag()+
geom_dag_node(color ="pink") +
geom_dag_text(color = "black", size=3.5)+
geom_dag_edges(size = 1.5)
library(ggthemes) # Para temas más lindos (opcional)
library(showtext) # Si querés usar una fuente especial
# Si usás showtext para una fuente más "cute"
font_add_google("Quicksand", "quicksand")
library(showtext) # Si querés usar una fuente especial
install.packages("showtext")
install.packages("sysfonts")
library(showtext) # Si querés usar una fuente especial
library(ggthemes) # Para temas más lindos (opcional)
# Si usás showtext para una fuente más "cute"
font_add_google("Quicksand", "quicksand")
# Creamos el DAG (mismo código que vos tenés)
causal <- dagitty("dag {
bb=\"0,0,1,1\"
\"Actividad Física\" [pos=\"0.581,0.104\"]
\"Alimentación\" [pos=\"0.416,0.576\"]
\"Consumo Familiar\" [pos=\"0.680,0.772\"]
\"Contención familiar\" [pos=\"0.142,0.073\"]
\"Intento de suicidio\" [outcome,pos=\"0.791,0.302\"]
\"Pobreza extrema\" [pos=\"0.489,0.858\"]
\"Violencia Física\" [pos=\"0.587,0.427\"]
Bullying [pos=\"0.329,0.800\"]
Consumo [pos=\"0.773,0.619\"]
Edad [pos=\"0.282,0.443\"]
IMC [pos=\"0.388,0.121\"]
Sexo [pos=\"0.162,0.576\"]
Soledad [exposure,pos=\"0.146,0.262\"]
\"Actividad Física\" -> \"Intento de suicidio\"
\"Actividad Física\" -> IMC
\"Alimentación\" -> IMC
\"Consumo Familiar\" -> \"Contención familiar\"
\"Consumo Familiar\" -> \"Violencia Física\"
\"Consumo Familiar\" -> Consumo
\"Contención familiar\" -> \"Intento de suicidio\"
\"Contención familiar\" -> Soledad
\"Pobreza extrema\" -> \"Alimentación\"
\"Pobreza extrema\" -> \"Consumo Familiar\"
\"Pobreza extrema\" -> \"Intento de suicidio\"
\"Pobreza extrema\" -> Consumo
\"Violencia Física\" -> \"Intento de suicidio\"
Bullying -> \"Intento de suicidio\"
Bullying -> \"Violencia Física\"
Bullying -> Soledad
Consumo -> \"Intento de suicidio\"
Consumo -> \"Violencia Física\"
Edad -> \"Intento de suicidio\"
Edad -> Soledad
IMC -> Bullying
Sexo -> \"Intento de suicidio\"
Sexo -> Soledad
Soledad -> \"Intento de suicidio\"
Soledad -> Consumo
}")
# Visualización "cute"
ggdag(causal, text = FALSE, use_labels = "name") +
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.5) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 16, color = "white", alpha = 0.9) +
geom_dag_text(color = "black", size = 3.5) +
scale_fill_brewer(palette = "Pastel1") +  # colores suaves
theme_minimal(base_family = "quicksand") +  # o "quicksand" si usás showtext
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA)
)
# Instalar paquetes si no los tenés
# install.packages("dagitty")
# install.packages("ggdag")
# install.packages("ggplot2")
# install.packages("dplyr")
install.packages("showtext")
library(dagitty)
library(ggdag)
library(ggplot2)
library(dplyr)
library(showtext)
library(sysfonts)
# Agregamos fuente "Quicksand" desde Google Fonts
font_add_google("Quicksand", "quicksand")
showtext_auto()
# Paleta pastel personalizada (hasta 14 colores únicos)
cute_colors <- c("#FFB3BA", "#FFDFBA", "#FFFFBA", "#BAFFC9", "#BAE1FF",
"#E6CCFF", "#FFCCE5", "#CCE5FF", "#CCFFCC", "#FFE0CC",
"#E0CCFF", "#D9F9D9", "#FFD6A5", "#CBAACB")
# DAG original
causal <- dagitty("dag {
bb=\"0,0,1,1\"
\"Actividad Física\" [pos=\"0.581,0.104\"]
\"Alimentación\" [pos=\"0.416,0.576\"]
\"Consumo Familiar\" [pos=\"0.680,0.772\"]
\"Contención familiar\" [pos=\"0.142,0.073\"]
\"Intento de suicidio\" [outcome,pos=\"0.791,0.302\"]
\"Pobreza extrema\" [pos=\"0.489,0.858\"]
\"Violencia Física\" [pos=\"0.587,0.427\"]
Bullying [pos=\"0.329,0.800\"]
Consumo [pos=\"0.773,0.619\"]
Edad [pos=\"0.282,0.443\"]
IMC [pos=\"0.388,0.121\"]
Sexo [pos=\"0.162,0.576\"]
Soledad [exposure,pos=\"0.146,0.262\"]
\"Actividad Física\" -> \"Intento de suicidio\"
\"Actividad Física\" -> IMC
\"Alimentación\" -> IMC
\"Consumo Familiar\" -> \"Contención familiar\"
\"Consumo Familiar\" -> \"Violencia Física\"
\"Consumo Familiar\" -> Consumo
\"Contención familiar\" -> \"Intento de suicidio\"
\"Contención familiar\" -> Soledad
\"Pobreza extrema\" -> \"Alimentación\"
\"Pobreza extrema\" -> \"Consumo Familiar\"
\"Pobreza extrema\" -> \"Intento de suicidio\"
\"Pobreza extrema\" -> Consumo
\"Violencia Física\" -> \"Intento de suicidio\"
Bullying -> \"Intento de suicidio\"
Bullying -> \"Violencia Física\"
Bullying -> Soledad
Consumo -> \"Intento de suicidio\"
Consumo -> \"Violencia Física\"
Edad -> \"Intento de suicidio\"
Edad -> Soledad
IMC -> Bullying
Sexo -> \"Intento de suicidio\"
Sexo -> Soledad
Soledad -> \"Intento de suicidio\"
Soledad -> Consumo
}")
# Visualización cute y prolija
ggdag(causal, text = FALSE, use_labels = "name") +
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 16, color = "white", alpha = 0.9) +
geom_dag_text(color = "black", size = 3.5, family = "quicksand") +
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA),
plot.title = element_text(size = 14, face = "bold", color = "#333333"),
plot.caption = element_text(size = 10, color = "#999999")
)
# Visualización cute y prolija
ggdag(causal, text = FALSE, use_labels = "name") +
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 16, color = "white", alpha = 0.9) +
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 3.5, family = "quicksand") +
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA),
plot.title = element_text(size = 14, face = "bold", color = "#333333"),
plot.caption = element_text(size = 10, color = "#999999")
)
# Agregar fuente Quicksand
font_add_google("Quicksand", "quicksand")
showtext_auto()
# Paleta pastel extendida
cute_colors <- c("#FFB3BA", "#FFDFBA", "#FFFFBA", "#BAFFC9", "#BAE1FF",
"#E6CCFF", "#FFCCE5", "#CCE5FF", "#CCFFCC", "#FFE0CC",
"#E0CCFF", "#D9F9D9", "#FFD6A5", "#CBAACB")
# Definir el DAG
causal <- dagitty("dag {
bb=\"0,0,1,1\"
\"Actividad Física\" [pos=\"0.581,0.104\"]
\"Alimentación\" [pos=\"0.416,0.576\"]
\"Consumo Familiar\" [pos=\"0.680,0.772\"]
\"Contención familiar\" [pos=\"0.142,0.073\"]
\"Intento de suicidio\" [outcome,pos=\"0.791,0.302\"]
\"Pobreza extrema\" [pos=\"0.489,0.858\"]
\"Violencia Física\" [pos=\"0.587,0.427\"]
Bullying [pos=\"0.329,0.800\"]
Consumo [pos=\"0.773,0.619\"]
Edad [pos=\"0.282,0.443\"]
IMC [pos=\"0.388,0.121\"]
Sexo [pos=\"0.162,0.576\"]
Soledad [exposure,pos=\"0.146,0.262\"]
\"Actividad Física\" -> \"Intento de suicidio\"
\"Actividad Física\" -> IMC
\"Alimentación\" -> IMC
\"Consumo Familiar\" -> \"Contención familiar\"
\"Consumo Familiar\" -> \"Violencia Física\"
\"Consumo Familiar\" -> Consumo
\"Contención familiar\" -> \"Intento de suicidio\"
\"Contención familiar\" -> Soledad
\"Pobreza extrema\" -> \"Alimentación\"
\"Pobreza extrema\" -> \"Consumo Familiar\"
\"Pobreza extrema\" -> \"Intento de suicidio\"
\"Pobreza extrema\" -> Consumo
\"Violencia Física\" -> \"Intento de suicidio\"
Bullying -> \"Intento de suicidio\"
Bullying -> \"Violencia Física\"
Bullying -> Soledad
Consumo -> \"Intento de suicidio\"
Consumo -> \"Violencia Física\"
Edad -> \"Intento de suicidio\"
Edad -> Soledad
IMC -> Bullying
Sexo -> \"Intento de suicidio\"
Sexo -> Soledad
Soledad -> \"Intento de suicidio\"
Soledad -> Consumo
}")
# Plot ordenando las capas correctamente
ggdag(causal, text = FALSE, use_labels = "name") +
# Dibujar primero nodos
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 16, color = "white", alpha = 0.9) +
# Luego edges (si querés que pasen detrás de las etiquetas)
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
# Finalmente etiquetas encima de todo
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 3.5, family = "quicksand") +
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA),
plot.title = element_text(size = 14, face = "bold", color = "#333333"),
plot.caption = element_text(size = 10, color = "#999999")
)
font_add_google("Quicksand", "quicksand")
showtext_auto()
# Colores pastel cute
cute_colors <- c("#FFB3BA", "#FFDFBA", "#FFFFBA", "#BAFFC9", "#BAE1FF",
"#E6CCFF", "#FFCCE5", "#CCE5FF", "#CCFFCC", "#FFE0CC",
"#E0CCFF", "#D9F9D9", "#FFD6A5", "#CBAACB")
# DAG
causal <- dagitty("dag {
bb=\"0,0,1,1\"
\"Actividad Física\" [pos=\"0.581,0.104\"]
\"Alimentación\" [pos=\"0.416,0.576\"]
\"Consumo Familiar\" [pos=\"0.680,0.772\"]
\"Contención familiar\" [pos=\"0.142,0.073\"]
\"Intento de suicidio\" [outcome,pos=\"0.791,0.302\"]
\"Pobreza extrema\" [pos=\"0.489,0.858\"]
\"Violencia Física\" [pos=\"0.587,0.427\"]
Bullying [pos=\"0.329,0.800\"]
Consumo [pos=\"0.773,0.619\"]
Edad [pos=\"0.282,0.443\"]
IMC [pos=\"0.388,0.121\"]
Sexo [pos=\"0.162,0.576\"]
Soledad [exposure,pos=\"0.146,0.262\"]
\"Actividad Física\" -> \"Intento de suicidio\"
\"Actividad Física\" -> IMC
\"Alimentación\" -> IMC
\"Consumo Familiar\" -> \"Contención familiar\"
\"Consumo Familiar\" -> \"Violencia Física\"
\"Consumo Familiar\" -> Consumo
\"Contención familiar\" -> \"Intento de suicidio\"
\"Contención familiar\" -> Soledad
\"Pobreza extrema\" -> \"Alimentación\"
\"Pobreza extrema\" -> \"Consumo Familiar\"
\"Pobreza extrema\" -> \"Intento de suicidio\"
\"Pobreza extrema\" -> Consumo
\"Violencia Física\" -> \"Intento de suicidio\"
Bullying -> \"Intento de suicidio\"
Bullying -> \"Violencia Física\"
Bullying -> Soledad
Consumo -> \"Intento de suicidio\"
Consumo -> \"Violencia Física\"
Edad -> \"Intento de suicidio\"
Edad -> Soledad
IMC -> Bullying
Sexo -> \"Intento de suicidio\"
Sexo -> Soledad
Soledad -> \"Intento de suicidio\"
Soledad -> Consumo
}")
# Visualización linda y sin etiquetas duplicadas
ggdag(causal, text = FALSE) +  # OJO: no usamos use_labels = "name"
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 16, color = "white", alpha = 0.9) +
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 3.5, family = "quicksand") +
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA)
)
# Visualización linda y sin etiquetas duplicadas
ggdag(causal, text = FALSE) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 30, color = "white", alpha = 0.9) +  # ⬅️ nodos más grandes
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 5.5, family = "quicksand") +  # ⬅️ texto más grande
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA)
)
ggdag(causal, text = FALSE) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 30, color = "white", alpha = 0.9) +  # nodos grandes
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 5.5, family = "quicksand") +  # texto normal
geom_text(data = filter(causal, name %in% c("soledad", "intento de suicidio")),
aes(x = x, y = y, label = name),
family = "quicksand", size = 5.5, fontface = "bold", color = "black") +  # solo etiquetas en negrita
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA)
)
nodes_df <- tidy_dagitty(causal)
ggdag(causal, text = FALSE) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 30, color = "white", alpha = 0.9) +
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 5.5, family = "quicksand") +
geom_text(data = filter(nodes_df, name %in% c("soledad", "intento de suicidio")),
aes(x = x, y = y, label = name),
family = "quicksand", size = 5.5, fontface = "bold", color = "black") +
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA)
)
ggdag(causal, text = FALSE) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 30, color = "white", alpha = 0.9) +
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 5.5, family = "quicksand") +
geom_text(data = filter(nodes_df, name %in% c("soledad", "intento de suicidio")),
aes(x = x, y = y, label = name),
family = "quicksand", size = 5.5, fontface = "bold", color = "black") +
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA)
)
# Visualización linda y sin etiquetas duplicadas
ggdag(causal, text = FALSE) +
geom_dag_node(aes(fill = factor(name)), shape = 21, size = 30, color = "white", alpha = 0.9) +  # ⬅️ nodos más grandes
geom_dag_edges(edge_color = "#F9AFAE", edge_alpha = 0.8, edge_width = 1.3) +
geom_dag_label(color = "black", fill = NA, label.size = 0, size = 7, family = "quicksand") +  # ⬅️ texto más grande
scale_fill_manual(values = cute_colors) +
theme_minimal(base_family = "quicksand") +
theme_dag() +
theme(
legend.position = "none",
plot.background = element_rect(fill = "#FFFDF6", color = NA),
panel.background = element_rect(fill = "#FFFDF6", color = NA)
)
